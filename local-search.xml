<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>内网穿透 ssh</title>
    <link href="/2022/12/01/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%20ssh/"/>
    <url>/2022/12/01/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%20ssh/</url>
    
    <content type="html"><![CDATA[<p>A：Ubuntu</p><p>B：Mac</p><p>目的：通过 Mac 进行 ssh 连接 Ubuntu</p><p>确认系统架构</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">arch</span><br></code></pre></td></tr></table></figure><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm"><span class="hljs-keyword">x</span><span class="hljs-number">86</span>_<span class="hljs-number">64</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">dpkg --print-architecture<br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">amd64<br></code></pre></td></tr></table></figure><p>下载 <a href="https://hsk.oray.com/download/">Linux amd64 花生壳</a></p><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo dpkg -i phddns_5_1_amd64.deb<br></code></pre></td></tr></table></figure><p>安装之后，系统会显示<mark style="background: #FF5582A6;">账号</mark> “SN”，相当于本机客户端账号，初始密码是admin：</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221201235043.png"></p><ul><li><p>启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo phddns start<br></code></pre></td></tr></table></figure></li><li><p>停止</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo phddns stop<br></code></pre></td></tr></table></figure></li><li><p>查看状态，会显示 SN，ONLINE 表示启动为在线状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo phddns status<br></code></pre></td></tr></table></figure></li></ul><p>进入花生壳管理平台 —-&gt; <mark style="background: #FF5582A6;">设备列表</mark> —-&gt; 添加设备 —-&gt; 输入 SN 码，即上面的那个</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221201235314.png"></p><p>添加设备成功后，点击<mark style="background: #FF5582A6;">内网穿透</mark>，按照下图配置</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221201235530.png"></p><p>配置后点击确定，点击下图的左下角的<mark style="background: #FF5582A6;">诊断</mark></p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221201235751.png"></p><p>上图访问地址在 : 后面的最后五个数字为端口号，不妨设为 <strong>12345</strong></p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221202000030.png"><br>上图的域名 IP 设为 <strong>103.46.x.x</strong></p><p>ssh 连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh 用户名@103.46.x.x -p 12345<br></code></pre></td></tr></table></figure><p>其中用户名就是 Ubuntu 终端最前的名字</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221202000853.png"></p><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p>[1] <a href="https://blog.csdn.net/yilongyoung/article/details/119845679">https://blog.csdn.net/yilongyoung/article/details/119845679</a></p>]]></content>
    
    
    <categories>
      
      <category>tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>内网穿透</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git_04_远程仓库</title>
    <link href="/2022/11/29/Git_04_%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/"/>
    <url>/2022/11/29/Git_04_%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<h1 id="1-配置"><a href="#1-配置" class="headerlink" title="1 配置"></a>1 配置</h1><ul><li><p>用户名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.name <span class="hljs-string">&quot;chao&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>邮箱</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global user.email <span class="hljs-string">&quot;xiaochao200@126.com&quot;</span><br></code></pre></td></tr></table></figure></li></ul><blockquote><p>可以随便填，主要记录你的信息</p></blockquote><h1 id="2-https"><a href="#2-https" class="headerlink" title="2 https"></a>2 https</h1><p>其中 origin 可以取别的名字</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git remote add origin https://github.com/用户名/仓库名.git<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push origin 本地分支[:远程分支]<br></code></pre></td></tr></table></figure><p>更具体</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push origin main:main<br></code></pre></td></tr></table></figure><p>当远程分支与本地分支同名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git push -u origin main<br></code></pre></td></tr></table></figure><p>第一次 push 加上 -u</p><p>需要输入用户名和密码，但是这里的密码 2021 年更改为了 tokens，tokens 的创建可以看 [[#^565e40|3.3 tokens]]</p><h1 id="3-ssh"><a href="#3-ssh" class="headerlink" title="3 ssh"></a>3 ssh</h1><h2 id="3-1-ssh"><a href="#3-1-ssh" class="headerlink" title="3.1 ssh"></a>3.1 ssh</h2><ul><li>生成本地 ssh</li></ul><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221124120355.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd .ssh<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat id_rsa.pub<br></code></pre></td></tr></table></figure><p>上面代码执行后输出的就是 ssh 秘钥，复制</p><p>如果没有 <mark style="background: #FF5582A6;">id_rsa.pub</mark></p><ul><li>创建 ssh 秘钥<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen -t rsa -C &quot;xiaochao200@126.com&quot;<br></code></pre></td></tr></table></figure></li></ul><p>生成后，执行上面步骤，最后复制</p><h2 id="3-2-github"><a href="#3-2-github" class="headerlink" title="3.2 github"></a>3.2 github</h2><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221124120751.png" alt="150"></p><p>在 github 账户的 settings 中找到下面的 SSH and GPG keys</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221124120843.png" alt="200"></p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221124120912.png"></p><p>点击 new ssh key，然后将之前复制的本地 ssh 秘钥粘贴保存即可</p><p>再创建一个仓库 resp</p><h2 id="3-3-tokens"><a href="#3-3-tokens" class="headerlink" title="3.3 tokens"></a>3.3 tokens</h2><p>^565e40</p><p>在 github 用户 settings 的 develpoer settings 中创建 tokens</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221124121148.png" alt="300"></p><h2 id="3-4-建立远程"><a href="#3-4-建立远程" class="headerlink" title="3.4 建立远程"></a>3.4 建立远程</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git remote add origin git@github.com:用户名/仓库名.git<br></code></pre></td></tr></table></figure><p>其中的 origin 也可以换成别的名字</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git remote set-url origin https://你的tokens@github.com/用户名/仓库名.git<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">第一次 push</span><br>git push -u origin main<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">以后 push</span><br>git push origin main<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git_03_分支</title>
    <link href="/2022/11/29/Git_03_%E5%88%86%E6%94%AF/"/>
    <url>/2022/11/29/Git_03_%E5%88%86%E6%94%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="1-创建分支"><a href="#1-创建分支" class="headerlink" title="1 创建分支"></a>1 创建分支</h1><h2 id="1-1-git-branch"><a href="#1-1-git-branch" class="headerlink" title="1.1 git branch"></a>1.1 git branch</h2><p>创建 test 分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git branch <span class="hljs-built_in">test</span><br></code></pre></td></tr></table></figure><p>查看所有分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git branch<br></code></pre></td></tr></table></figure><p>*表示当前的分支为 main</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128172420.png" alt="150"></p><p>删除分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git branch -d <span class="hljs-built_in">test</span><br></code></pre></td></tr></table></figure><p>现在在 hello.txt 中添加一行文本 yyds，然后 commit</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git commit -a -m <span class="hljs-string">&quot;add yyds&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">log</span> --oneline<br></code></pre></td></tr></table></figure><p>可以看到，我们的修改只作用的 main 分支，而 test 分支没有改变</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128173146.png" alt="400"></p><h2 id="1-2-git-checkout"><a href="#1-2-git-checkout" class="headerlink" title="1.2 git checkout"></a>1.2 git checkout</h2><p>切换分支到 test</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git checkout <span class="hljs-built_in">test</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128173357.png" alt="500"></p><p>此时打开 hello.txt 文件，会发现 yyds 文本没了，因为 yyds 是在创建 test 分支后，在 main 分支中修改的</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128173516.png" alt="500"></p><p>此时，我们再修改 hello.txt 文件，追加一行文本 uzi，然后 commit</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git commit -a -m <span class="hljs-string">&quot;add yyds&quot;</span><br></code></pre></td></tr></table></figure><p>再显示日志</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">log</span> --oneline --graph --all<br></code></pre></td></tr></table></figure><p>可以看到，出现了两个分支</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128173918.png" alt="500"></p><h1 id="2-合并分支"><a href="#2-合并分支" class="headerlink" title="2 合并分支"></a>2 合并分支</h1><h2 id="2-1-git-merge"><a href="#2-1-git-merge" class="headerlink" title="2.1 git merge"></a>2.1 git merge</h2><p>先切换回 main 分支，然后合并</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git checkout main<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git merge <span class="hljs-built_in">test</span><br></code></pre></td></tr></table></figure><p>由于两个分支内容不同，直接合并会发生冲突，需要先修改冲突<br>merge conflict in hello.txt</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128174315.png"></p><p>打开 hello.txt 文件，可以看到下面的文本，需要手动修改，比如保留 yyds 或保留 uzi，或者同时保留，然后 commit</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128174639.png" alt="500"></p><p>现在将 hello.txt 文件修改如下</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128174951.png" alt="500"></p><p> 然后 commit</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git commit -a -m <span class="hljs-string">&quot;merge conflict&quot;</span><br></code></pre></td></tr></table></figure><p>此时查看日志</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128175122.png" alt="500"></p><p>如果没有冲突，则会直接合并</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">touch</span> a.txt<br>git add a.txt<br>git commit -m <span class="hljs-string">&quot;main a&quot;</span><br>git branch <span class="hljs-built_in">test</span><br>git checkout <span class="hljs-built_in">test</span><br><span class="hljs-built_in">touch</span> b.txt<br>git add b.txt<br>git commit -m <span class="hljs-string">&quot;test b&quot;</span><br>git checkout main<br>git merge <span class="hljs-built_in">test</span><br></code></pre></td></tr></table></figure><h1 id="3-变基"><a href="#3-变基" class="headerlink" title="3 变基"></a>3 变基</h1><ul><li>Step 1</li></ul><p>重新 init 一个 git_test 文件，其中有两个文件 hello.txt 和 test.txt</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128234725.png"></p><ul><li>Step 2</li></ul><p>创建 test 分支，然后在两个分支分别修改文件</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128234957.png"><br><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128234941.png" alt="500"></p><h2 id="3-1-git-rebase"><a href="#3-1-git-rebase" class="headerlink" title="3.1 git rebase"></a>3.1 git rebase</h2><p>在上面的基础之下，在 test 分支执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git rebase main<br></code></pre></td></tr></table></figure><p>执行完之后的日志为</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128235112.png" alt="500"></p><p>其实上面的命令类似于执行了 git merge main</p><h1 id="4-优选"><a href="#4-优选" class="headerlink" title="4 优选"></a>4 优选</h1><h2 id="4-1-git-cherry-pick"><a href="#4-1-git-cherry-pick" class="headerlink" title="4.1 git cherry-pick"></a>4.1 git cherry-pick</h2><p>相当于 merge 部分我想要的</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221129110819.png"></p><p>回到 main 分支查看日志</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221129110907.png" alt=" 500"></p><p> 现在我们希望把 test 分支的第二次提交合并到 main 分支</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git cherry-pick 1d09<br></code></pre></td></tr></table></figure><p>此时，确实合并过来了</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221129111055.png" alt="500"></p>]]></content>
    
    
    <categories>
      
      <category>tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git_02_基本命令</title>
    <link href="/2022/11/28/Git_02_%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/11/28/Git_02_%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="1-创建本地仓库"><a href="#1-创建本地仓库" class="headerlink" title="1 创建本地仓库"></a>1 创建本地仓库</h1><p>进入本地任何一个文件夹，比如 git_test 文件夹</p><h2 id="1-1-git-init"><a href="#1-1-git-init" class="headerlink" title="1.1 git init"></a>1.1 git init</h2><p>初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git init<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128114927.png"></p><p>会自动生成一个 .git 的隐藏文件</p><p>取消初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> -rf .git<br></code></pre></td></tr></table></figure><h2 id="1-2-git-status"><a href="#1-2-git-status" class="headerlink" title="1.2 git status"></a>1.2 git status</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git status<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128114957.png"></p><p>默认为 <mark style="background: #FF5582A6;">main</mark> 分支</p><h1 id="2-添加和提交"><a href="#2-添加和提交" class="headerlink" title="2 添加和提交"></a>2 添加和提交</h1><h2 id="2-1-touch-new-file"><a href="#2-1-touch-new-file" class="headerlink" title="2.1 touch new file"></a>2.1 touch new file</h2><pre><code class="hljs">创建一个 hello.txt 文件，写入 hello 文本内容，再次 git status 会输出一下信息，会有 untracked files</code></pre><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128115245.png"></p><h2 id="2-2-git-add"><a href="#2-2-git-add" class="headerlink" title="2.2 git add"></a>2.2 git add</h2><pre><code class="hljs">将文件 add 到暂存区，&lt;mark style=&quot;background: #FF5582A6;&quot;&gt;git add .&lt;/mark&gt; 可以 add 所有文件</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add hello.txt<br></code></pre></td></tr></table></figure><p>再次查看 git status，得到如下图，untracked files 变成了 changes to be committed</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128115708.png"></p><h2 id="2-3-git-commit"><a href="#2-3-git-commit" class="headerlink" title="2.3 git commit"></a>2.3 git commit</h2><pre><code class="hljs">先 add 后 commit，并添加描述信息，就可以提交到仓库中</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git commit -m <span class="hljs-string">&quot;描述信息&quot;</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128115925.png"></p><p>如果只是修改了文件，而没有创建新的，则可以使用下面的命令代替 add 和 commit</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git commit -a -m <span class="hljs-string">&quot;描述信息&quot;</span><br></code></pre></td></tr></table></figure><h2 id="2-4-git-log"><a href="#2-4-git-log" class="headerlink" title="2.4 git log"></a>2.4 git log</h2><pre><code class="hljs">查看日志，前面的 e387f67…… 是 commit id，对应着不同的版本</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">log</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128120501.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">log</span> --oneline<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128120517.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">log</span> --oneline --graph<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128120535.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">log</span> --oneline --graph --all<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128120535.png"></p><h2 id="2-5-modify"><a href="#2-5-modify" class="headerlink" title="2.5 modify"></a>2.5 modify</h2><p>现在对 hello.txt 文件内容修改，添加一行文本 world 后，再次 git status，下面显示 changes not staged for commit</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128120619.png"></p><p>再次 add —&gt; commit</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128121323.png"></p><p>再通过 git log –oneline，可以看到现在有两个版本，<mark style="background: #ADCCFFA6;">HEAD</mark> 指向的是当前版本，可以通过版本号进行回溯</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128121502.png"></p><h2 id="2-6-gitignore"><a href="#2-6-gitignore" class="headerlink" title="2.6 .gitignore"></a>2.6 .gitignore</h2><p><mark style="background: #FF5582A6;">.gitignore</mark> 得到一个文件忽略列表，也就是在忽略列表的文件，不会被 add</p><p>创建两个新的文件，一个为 lbwnb.txt，一个为 .gitignore，再次 git status 会发现这两个文件 untracked，现在希望 lbwnb.txt 不会被 track</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128121930.png"></p><p>在 .gitignore 文件中添加 lbwnb.txt，再执行 git status 会 untracked 文件只有 .gitignore</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128123913.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">忽略所有 .txt 文件</span><br>*.txt<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">忽略所有 .txt 文件，除了 666.txt</span><br>!666.txt<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">忽略子目录下所有文件</span><br>test/<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">忽略子目录下所有 .txt 文件</span><br>test/*.txt<br></code></pre></td></tr></table></figure><p>将 .gitignore 执行 add —&gt; commit</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128165128.png"></p><h2 id="2-7-git-reset"><a href="#2-7-git-reset" class="headerlink" title="2.7 git reset"></a>2.7 git reset</h2><p>现在查看日志，输入 git log –oneline，可以看到三个不同的版本信息</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128170325.png" alt="450"></p><p>如果我们想回退到 first commit 版本，输入部分版本号即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git reset --hard e387<br></code></pre></td></tr></table></figure><p>此时再 git log –oneline，只剩下一条版本</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128170706.png" alt="500"></p><p>那如果此时想回到最开始的版本，如果你知道版本号，那么可以通过上面同样的方法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git reset --hard 0ed1<br></code></pre></td></tr></table></figure><p>如果版本号看不见了怎么办</p><h2 id="2-8-git-reflog"><a href="#2-8-git-reflog" class="headerlink" title="2.8 git reflog"></a>2.8 git reflog</h2><p>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git reflog<br></code></pre></td></tr></table></figure><p>可以看到全部的日志</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128170946.png"></p>]]></content>
    
    
    <categories>
      
      <category>tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git_01_安装</title>
    <link href="/2022/11/28/Git_01_%E5%AE%89%E8%A3%85%20Git/"/>
    <url>/2022/11/28/Git_01_%E5%AE%89%E8%A3%85%20Git/</url>
    
    <content type="html"><![CDATA[<h1 id="1-安装"><a href="#1-安装" class="headerlink" title="1 安装"></a>1 安装</h1><p><a href="https://git-scm.com/downloads">官网下载</a></p><p>mac 可以用过执行命令行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">xcode-select --install<br></code></pre></td></tr></table></figure><p>windows 需要右键 <mark style="background: #FF5582A6;">git bash here</mark></p><p>mac 直接打开命令行</p><h1 id="2-用户名和邮箱"><a href="#2-用户名和邮箱" class="headerlink" title="2 用户名和邮箱"></a>2 用户名和邮箱</h1><p>用于区分不同用户</p><p>用户名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git config --global user.name &quot;chao&quot;<br></code></pre></td></tr></table></figure><p>邮箱</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git config --global user.email &quot;xiaochao200@126.com&quot;<br></code></pre></td></tr></table></figure><p>显示配置全部信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global -l<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Pandas_01</title>
    <link href="/2022/11/27/Pandas/"/>
    <url>/2022/11/27/Pandas/</url>
    
    <content type="html"><![CDATA[<p>111</p>]]></content>
    
    
    <categories>
      
      <category>Data_Science</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Pandas</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Numpy_01</title>
    <link href="/2022/11/25/Numpy/"/>
    <url>/2022/11/25/Numpy/</url>
    
    <content type="html"><![CDATA[<p><a href="https://numpy.org/devdocs/user/absolute_beginners.html">Numpy 官网</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br></code></pre></td></tr></table></figure><h1 id="1-初始化"><a href="#1-初始化" class="headerlink" title="1 初始化"></a>1 初始化</h1><h2 id="1-1-np-empty"><a href="#1-1-np-empty" class="headerlink" title="1.1 np.empty"></a>1.1 np.empty</h2><p><mark style="background: #FF5582A6;">意义</mark><br>    创建空的 ndarray</p><p><mark style="background: #ADCCFFA6;">关键参数</mark></p><ul><li>shape</li><li>dtype</li></ul><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(np.empty([<span class="hljs-number">2</span>, <span class="hljs-number">2</span>], dtype=<span class="hljs-built_in">int</span>))<br></code></pre></td></tr></table></figure><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs lua">array(<span class="hljs-string">[[-1073741821, -1067949133],</span><br><span class="hljs-string">       [  496041986,    19249760]]</span>)<br></code></pre></td></tr></table></figure><h2 id="1-2-np-arange"><a href="#1-2-np-arange" class="headerlink" title="1.2 np.arange"></a>1.2 np.arange</h2><p><mark style="background: #FF5582A6;">意义</mark><br>    创建 ndarry</p><p><mark style="background: #ADCCFFA6;">关键参数</mark></p><ul><li>start</li><li>stop</li><li>step</li><li>dtype</li></ul><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(np.arange(<span class="hljs-number">0</span>, <span class="hljs-number">5</span>, <span class="hljs-number">0.5</span>))<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">array</span>([<span class="hljs-number">0</span>. , <span class="hljs-number">0</span>.<span class="hljs-number">5</span>, <span class="hljs-number">1</span>. , <span class="hljs-number">1</span>.<span class="hljs-number">5</span>, <span class="hljs-number">2</span>. , <span class="hljs-number">2</span>.<span class="hljs-number">5</span>, <span class="hljs-number">3</span>. , <span class="hljs-number">3</span>.<span class="hljs-number">5</span>, <span class="hljs-number">4</span>. , <span class="hljs-number">4</span>.<span class="hljs-number">5</span>])<br></code></pre></td></tr></table></figure><h2 id="1-3-np-linspace"><a href="#1-3-np-linspace" class="headerlink" title="1.3 np.linspace"></a>1.3 np.linspace</h2><p><mark style="background: #FF5582A6;">意义</mark><br>    类似 [[#1.2 np.arange|np.arange]]，不过可以指定个数</p><p><mark style="background: #ADCCFFA6;">关键参数</mark></p><ul><li>start</li><li>stop</li><li>num</li></ul><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(np.linspace(<span class="hljs-number">1</span>, <span class="hljs-number">5</span>, <span class="hljs-number">10</span>))<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">array</span>([<span class="hljs-number">1</span>.        , <span class="hljs-number">1</span>.<span class="hljs-number">44444444</span>, <span class="hljs-number">1</span>.<span class="hljs-number">88888889</span>, <span class="hljs-number">2</span>.<span class="hljs-number">33333333</span>, <span class="hljs-number">2</span>.<span class="hljs-number">77777778</span>,<br>       <span class="hljs-attribute">3</span>.<span class="hljs-number">22222222</span>, <span class="hljs-number">3</span>.<span class="hljs-number">66666667</span>, <span class="hljs-number">4</span>.<span class="hljs-number">11111111</span>, <span class="hljs-number">4</span>.<span class="hljs-number">55555556</span>, <span class="hljs-number">5</span>.        ])<br></code></pre></td></tr></table></figure><h2 id="1-4-np-ones"><a href="#1-4-np-ones" class="headerlink" title="1.4 np.ones"></a>1.4 np.ones</h2><p><mark style="background: #FF5582A6;">意义</mark><br>     值全部为 1</p><p><mark style="background: #ADCCFFA6;">关键参数</mark></p><ul><li>shape</li><li>dtype</li></ul><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(np.ones(<span class="hljs-number">3</span>))<br><span class="hljs-built_in">print</span>(np.ones(<span class="hljs-number">3</span>).shape)<br></code></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-built_in">array</span>([<span class="hljs-number">1</span>., <span class="hljs-number">1</span>., <span class="hljs-number">1</span>.])<br>(<span class="hljs-number">3</span>,)<br></code></pre></td></tr></table></figure><h2 id="1-5-np-zeros"><a href="#1-5-np-zeros" class="headerlink" title="1.5 np.zeros"></a>1.5 np.zeros</h2><p><mark style="background: #FF5582A6;">意义</mark><br>    值全部为 1，类似 [[#1.4 np.ones|np.ones]]</p><p><mark style="background: #ADCCFFA6;">关键参数</mark></p><ul><li>shape</li><li>dtype</li></ul><h1 id="2-操作"><a href="#2-操作" class="headerlink" title="2 操作"></a>2 操作</h1><h2 id="2-1-切片和索引"><a href="#2-1-切片和索引" class="headerlink" title="2.1 切片和索引"></a>2.1 切片和索引</h2><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221127155917.png"></p><p><mark style="background: #FF5582A6;">意义</mark><br>    通过切片和索引获取部分值</p><p><mark style="background: #ADCCFFA6;">关键参数</mark></p><ul><li>[:]</li></ul><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">a = np.array([[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>], [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>]])<br><span class="hljs-built_in">print</span>(a)<br><span class="hljs-built_in">print</span>(a[<span class="hljs-number">0</span>])<br><span class="hljs-built_in">print</span>(a[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>])<br><span class="hljs-built_in">print</span>(a[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>:])<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">array</span>([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>])<br><span class="hljs-attribute">2</span><span class="hljs-meta"></span><br><span class="hljs-meta">[2 3]</span><br></code></pre></td></tr></table></figure><h2 id="2-2-np-sort"><a href="#2-2-np-sort" class="headerlink" title="2.2 np.sort"></a>2.2 np.sort</h2><p><mark style="background: #FF5582A6;">意义</mark><br>    按照升序排</p><p><mark style="background: #ADCCFFA6;">关键参数</mark></p><ul><li>a</li><li>axis</li></ul><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">a = np.array([[<span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">9</span>, <span class="hljs-number">1</span>, <span class="hljs-number">6</span>]])<br><span class="hljs-built_in">print</span>(np.sort(a))<br></code></pre></td></tr></table></figure><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-string">[[0 1 2]</span><br><span class="hljs-string"> [1 6 9]]</span><br></code></pre></td></tr></table></figure><p><mark style="background: #BBFABBA6;">示例 2</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">a = np.array([[<span class="hljs-number">9</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">6</span>]])<br><span class="hljs-built_in">print</span>(np.sort(a, axis=<span class="hljs-number">0</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------&quot;</span>)<br><span class="hljs-built_in">print</span>(np.sort(a, axis=<span class="hljs-number">1</span>))<br></code></pre></td></tr></table></figure><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs lua"><span class="hljs-string">[[2 1 0]</span><br><span class="hljs-string"> [9 1 6]]</span><br> <span class="hljs-comment">---------</span><br><span class="hljs-string">[[0 1 9]</span><br><span class="hljs-string"> [1 2 6]]</span><br></code></pre></td></tr></table></figure><h2 id="2-3-np-concatenate"><a href="#2-3-np-concatenate" class="headerlink" title="2.3 np.concatenate"></a>2.3 np.concatenate</h2><p><mark style="background: #FF5582A6;">意义</mark></p><p><mark style="background: #ADCCFFA6;">关键参数</mark></p><ul><li>(a1, a2, ……)</li><li>axis</li></ul><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python">a = np.array([[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>]])<br>b = np.array([[<span class="hljs-number">5</span>, <span class="hljs-number">6</span>]])<br><span class="hljs-built_in">print</span>(np.concatenate((a, b), axis=<span class="hljs-number">0</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------&quot;</span>)<br><span class="hljs-built_in">print</span>(np.concatenate((a, b.T), axis=<span class="hljs-number">1</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;---------&quot;</span>)<br><span class="hljs-built_in">print</span>(np.concatenate((a, b), axis=<span class="hljs-literal">None</span>))<br></code></pre></td></tr></table></figure><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs lua">array(<span class="hljs-string">[[1, 2],</span><br><span class="hljs-string">       [3, 4],</span><br><span class="hljs-string">       [5, 6]]</span>)<br><span class="hljs-comment">---------</span><br>array(<span class="hljs-string">[[1, 2, 5],</span><br><span class="hljs-string">       [3, 4, 6]]</span>)<br><span class="hljs-comment">---------</span><br>array([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>])<br></code></pre></td></tr></table></figure><h2 id="2-4-筛选"><a href="#2-4-筛选" class="headerlink" title="2.4 筛选"></a>2.4 筛选</h2><p><mark style="background: #FF5582A6;">意义</mark><br>    可用于 mask</p><p><mark style="background: #ADCCFFA6;">关键参数</mark></p><ul><li>比较符号</li><li>索引 []</li></ul><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h2 id="2-5-np-nonzero"><a href="#2-5-np-nonzero" class="headerlink" title="2.5 np.nonzero"></a>2.5 np.nonzero</h2><p><mark style="background: #FF5582A6;">意义</mark></p><h2 id="关键参数"><a href="#关键参数" class="headerlink" title="关键参数"></a><mark style="background: #ADCCFFA6;">关键参数</mark></h2><p>- </p><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h2 id="2-6-np-vstack"><a href="#2-6-np-vstack" class="headerlink" title="2.6 np.vstack"></a>2.6 np.vstack</h2><p><mark style="background: #FF5582A6;">意义</mark></p><h2 id="关键参数-1"><a href="#关键参数-1" class="headerlink" title="关键参数"></a><mark style="background: #ADCCFFA6;">关键参数</mark></h2><p>- </p><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h2 id="2-7-np-hstack"><a href="#2-7-np-hstack" class="headerlink" title="2.7 np.hstack"></a>2.7 np.hstack</h2><p><mark style="background: #FF5582A6;">意义</mark></p><h2 id="关键参数-2"><a href="#关键参数-2" class="headerlink" title="关键参数"></a><mark style="background: #ADCCFFA6;">关键参数</mark></h2><p>- </p><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h2 id="2-8-np-hsplit"><a href="#2-8-np-hsplit" class="headerlink" title="2.8 np.hsplit"></a>2.8 np.hsplit</h2><p><mark style="background: #FF5582A6;">意义</mark></p><h2 id="关键参数-3"><a href="#关键参数-3" class="headerlink" title="关键参数"></a><mark style="background: #ADCCFFA6;">关键参数</mark></h2><p>- </p><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h2 id="2-9-copy"><a href="#2-9-copy" class="headerlink" title="2.9 .copy()"></a>2.9 .copy()</h2><p><mark style="background: #FF5582A6;">意义</mark></p><h2 id="关键参数-4"><a href="#关键参数-4" class="headerlink" title="关键参数"></a><mark style="background: #ADCCFFA6;">关键参数</mark></h2><p>- </p><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h2 id="2-10-加减乘除"><a href="#2-10-加减乘除" class="headerlink" title="2.10 加减乘除"></a>2.10 加减乘除</h2><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221127160921.png"><br><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221127160935.png"></p><p><mark style="background: #FF5582A6;">意义</mark></p><h2 id="关键参数-5"><a href="#关键参数-5" class="headerlink" title="关键参数"></a><mark style="background: #ADCCFFA6;">关键参数</mark></h2><p>- </p><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h2 id="2-11-sum-min-max"><a href="#2-11-sum-min-max" class="headerlink" title="2.11 .sum() .min() .max()"></a>2.11 .sum() .min() .max()</h2><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221127161212.png"></p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221127161343.png"></p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221127161417.png"></p><p><mark style="background: #FF5582A6;">意义</mark></p><h2 id="关键参数-6"><a href="#关键参数-6" class="headerlink" title="关键参数"></a><mark style="background: #ADCCFFA6;">关键参数</mark></h2><p>- </p><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h2 id="2-12-np-unique"><a href="#2-12-np-unique" class="headerlink" title="2.12 np.unique()"></a>2.12 np.unique()</h2><p><mark style="background: #FF5582A6;">意义</mark></p><h2 id="关键参数-7"><a href="#关键参数-7" class="headerlink" title="关键参数"></a><mark style="background: #ADCCFFA6;">关键参数</mark></h2><p>- </p><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h2 id="2-13-np-flip"><a href="#2-13-np-flip" class="headerlink" title="2.13 np.flip()"></a>2.13 np.flip()</h2><p><mark style="background: #FF5582A6;">意义</mark></p><h2 id="关键参数-8"><a href="#关键参数-8" class="headerlink" title="关键参数"></a><mark style="background: #ADCCFFA6;">关键参数</mark></h2><p>- </p><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h1 id="3-维度"><a href="#3-维度" class="headerlink" title="3 维度"></a>3 维度</h1><h2 id="3-1-np-newaxis"><a href="#3-1-np-newaxis" class="headerlink" title="3.1 np.newaxis()"></a>3.1 np.newaxis()</h2><p><mark style="background: #FF5582A6;">意义</mark></p><h2 id="关键参数-9"><a href="#关键参数-9" class="headerlink" title="关键参数"></a><mark style="background: #ADCCFFA6;">关键参数</mark></h2><p>- </p><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h2 id="3-2-np-expand-dims"><a href="#3-2-np-expand-dims" class="headerlink" title="3.2 np.expand_dims()"></a>3.2 np.expand_dims()</h2><p><mark style="background: #FF5582A6;">意义</mark></p><h2 id="关键参数-10"><a href="#关键参数-10" class="headerlink" title="关键参数"></a><mark style="background: #ADCCFFA6;">关键参数</mark></h2><p>- </p><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h2 id="3-3-reshape-transpose-T"><a href="#3-3-reshape-transpose-T" class="headerlink" title="3.3 .reshape() .transpose() .T"></a>3.3 .reshape() .transpose() .T</h2><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221127161915.png"></p><p><mark style="background: #FF5582A6;">意义</mark></p><h2 id="关键参数-11"><a href="#关键参数-11" class="headerlink" title="关键参数"></a><mark style="background: #ADCCFFA6;">关键参数</mark></h2><p>- </p><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h2 id="3-4-flatten-ravel"><a href="#3-4-flatten-ravel" class="headerlink" title="3.4 .flatten() .ravel()"></a>3.4 .flatten() .ravel()</h2><p><mark style="background: #FF5582A6;">意义</mark></p><h2 id="关键参数-12"><a href="#关键参数-12" class="headerlink" title="关键参数"></a><mark style="background: #ADCCFFA6;">关键参数</mark></h2><p>- </p><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h2 id="3-5-ndim-size-shape"><a href="#3-5-ndim-size-shape" class="headerlink" title="3.5 .ndim .size .shape"></a>3.5 .ndim .size .shape</h2><p><mark style="background: #FF5582A6;">意义</mark></p><h2 id="关键参数-13"><a href="#关键参数-13" class="headerlink" title="关键参数"></a><mark style="background: #ADCCFFA6;">关键参数</mark></h2><p>- </p><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h1 id="4-广播机制-Broadcasting"><a href="#4-广播机制-Broadcasting" class="headerlink" title="4 广播机制 (Broadcasting)"></a>4 广播机制 (Broadcasting)</h1><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221127161102.png"></p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221127161454.png"></p><p><mark style="background: #FF5582A6;">意义</mark></p><h2 id="关键参数-14"><a href="#关键参数-14" class="headerlink" title="关键参数"></a><mark style="background: #ADCCFFA6;">关键参数</mark></h2><p>- </p><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h1 id="5-保存和读取"><a href="#5-保存和读取" class="headerlink" title="5 保存和读取"></a>5 保存和读取</h1><h2 id="5-1-np-save-np-savez-np-load"><a href="#5-1-np-save-np-savez-np-load" class="headerlink" title="5.1 np.save() np.savez() np.load()"></a>5.1 np.save() np.savez() np.load()</h2><p><mark style="background: #FF5582A6;">意义</mark></p><h2 id="关键参数-15"><a href="#关键参数-15" class="headerlink" title="关键参数"></a><mark style="background: #ADCCFFA6;">关键参数</mark></h2><p>- </p><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><h2 id="5-2-np-savetxt-np-loadtxt"><a href="#5-2-np-savetxt-np-loadtxt" class="headerlink" title="5.2 np.savetxt() np.loadtxt()"></a>5.2 np.savetxt() np.loadtxt()</h2><p><mark style="background: #FF5582A6;">意义</mark></p><h2 id="关键参数-16"><a href="#关键参数-16" class="headerlink" title="关键参数"></a><mark style="background: #ADCCFFA6;">关键参数</mark></h2><p>- </p><p><mark style="background: #BBFABBA6;">示例 1</mark></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><br></code></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><p>她最喜欢的中国成语是 xxx， 大概意思是上天会按照每个人付出相应的勤奋，给与酬劳，她相信勤奋会使得我们变得更好。</p><p>My Partner favorite Chinese idiom is god rewards diligent, which means that God will reward each person according to his or her hard work, and she believes that hard work will make us better.</p><p>We should trust what we see with our eyes more than what we hear with our ears</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128095155.png"></p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128102730.png"></p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221128105625.png"></p><p>未雨绸缪</p><p>未雨绸缪 matches number ten e</p><p>金玉其外败絮其中 matches number seven b</p><p>一叶障目 mathches number forteeen m</p><p>We interpret xx as having adequate guidelines before doing anything, otherwise you may be caught off guard in the face of some unexpected situations.</p><p>We interpret 未雨绸缪 as having  adequate guidelines before doing anything, otherwise you may be caught off guard by some unexpected situations.</p><p>Planing and preparing ahead of time can prevent many avoidable</p>]]></content>
    
    
    <categories>
      
      <category>Data_Science</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Numpy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git_01</title>
    <link href="/2022/11/24/Git_01/"/>
    <url>/2022/11/24/Git_01/</url>
    
    <content type="html"><![CDATA[<h1 id="1、配置"><a href="#1、配置" class="headerlink" title="1、配置"></a>1、配置</h1><ul><li><p>用户名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git config --global user.name &quot;chao&quot;<br></code></pre></td></tr></table></figure></li><li><p>邮箱</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git config --global user.email &quot;xiaochao200@126.com&quot;<br></code></pre></td></tr></table></figure></li></ul><blockquote><p>可以随便填，主要记录你的信息</p></blockquote><h1 id="2、与-github-建立远程-ssh"><a href="#2、与-github-建立远程-ssh" class="headerlink" title="2、与 github 建立远程 (ssh)"></a>2、与 github 建立远程 (ssh)</h1><h2 id="2-1-初始化"><a href="#2-1-初始化" class="headerlink" title="2.1 初始化"></a>2.1 初始化</h2><p>进入本地一个文件夹</p><ul><li><p>初始化</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git init<br></code></pre></td></tr></table></figure></li><li><p>创建文件（非必要）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">touch README.md<br></code></pre></td></tr></table></figure></li></ul><h2 id="2-2-ssh"><a href="#2-2-ssh" class="headerlink" title="2.2 ssh"></a>2.2 ssh</h2><ul><li>生成本地 ssh</li></ul><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221124120355.png"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd ~<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd .ssh<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat id_rsa.pub<br></code></pre></td></tr></table></figure><p>上面代码执行后输出的就是 ssh 秘钥，复制</p><p>如果没有 <mark style="background: #FF5582A6;">id_rsa.pub</mark></p><ul><li>创建 ssh 秘钥<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen -t rsa -C &quot;xiaochao200@126.com&quot;<br></code></pre></td></tr></table></figure></li></ul><p>生成后，执行上面步骤，最后复制</p><h2 id="2-3-github"><a href="#2-3-github" class="headerlink" title="2.3 github"></a>2.3 github</h2><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221124120751.png" alt="150"></p><p>在 github 账户的 settings 中找到下面的 SSH and GPG keys</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221124120843.png" alt="200"></p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221124120912.png"></p><p>点击 new ssh key，然后将之前复制的本地 ssh 秘钥粘贴保存即可</p><p>再创建一个仓库 resp</p><h2 id="2-4-tokens"><a href="#2-4-tokens" class="headerlink" title="2.4 tokens"></a>2.4 tokens</h2><p>在 github 用户 settings 的 develpoer settings 中创建 tokens</p><p><img src="https://raw.githubusercontent.com/Chao200/Obsidian/main/%E8%AE%BA%E6%96%87/20221124121148.png" alt="300"></p><h2 id="2-5-建立远程"><a href="#2-5-建立远程" class="headerlink" title="2.5 建立远程"></a>2.5 建立远程</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git remote add origin git@github.com:用户名/仓库名.git<br></code></pre></td></tr></table></figure><p>其中的 origin 也可以换成别的名字</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git remote set-url origin https://你的tokens@github.com/用户名/仓库名.git<br></code></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">第一次 push</span><br>git push -u origin main<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">以后 push</span><br>git push origin main<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
